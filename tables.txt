---Поля `direction_call` (направление вызова) и `status_ending` (статус завершения) в таблице `information` и поле `blacklist` в таблице `client`
---предлагаю хранить в int и каждой цифре присвоить свое значение статуса
---Например,
---`derection_call`
---	1-входящий
---	2-исходящий
---	3-внутренний
---	4-callback
---`status_ending`
---	1-завершен
---	2-переведен
---	3-сброшен
---`blacklist`
---	0-клиент не в черном списке
---	1-клиент в черном списке

CREATE TABLE record (
  id_record  SERIAL PRIMARY KEY,
  id_information INTEGER DEFAULT NULL,
  id_mark INTEGER DEFAULT NULL,
  title_mp3 VARCHAR(30) UNIQUE DEFAULT NULL,
  transcript VARCHAR(30) UNIQUE DEFAULT NULL,
  topic VARCHAR(30) DEFAULT NULL
);

		
CREATE TABLE information (
  id_information SERIAL PRIMARY KEY,
  id_date_time INTEGER DEFAULT NULL,
  id_operator INTEGER DEFAULT NULL,
  direction_call INTEGER DEFAULT NULL,
  id_client INTEGER  DEFAULT NULL,
  status_ending INTEGER DEFAULT NULL
);

		
CREATE TABLE date_time (
  id_date_time SERIAL PRIMARY KEY,
  date_time_accept TIMESTAMP DEFAULT NULL,
  date_time_start TIMESTAMP DEFAULT NULL,
  date_time_end TIMESTAMP DEFAULT NULL,
  duration TIME DEFAULT NULL
);
	
CREATE TABLE operator (
  id_operator SERIAL PRIMARY KEY,
  operator_team VARCHAR(30) DEFAULT NULL
);
		
CREATE TABLE mark_system (
  id_mark_system SERIAL PRIMARY KEY,
  date_time_mark_system TIMESTAMP DEFAULT NULL,
  mark_system INTEGER DEFAULT NULL
);
		
CREATE TABLE mark_inspector (
  id_mark_inspector SERIAL PRIMARY KEY,
  date_time_mark_inspector TIMESTAMP DEFAULT NULL,
  id_inspector INTEGER DEFAULT NULL,
  comment TEXT DEFAULT NULL,
  mark_inspector INTEGER DEFAULT NULL
);
	
CREATE TABLE inspector (
  id_inspector SERIAL PRIMARY KEY,
  name VARCHAR(30) DEFAULT NULL
);
		
CREATE TABLE client (
  id_client SERIAL PRIMARY KEY,
  phone_number INTEGER DEFAULT NULL,
  blacklist INTEGER DEFAULT NULL
);

	
CREATE TABLE mark (
  id_mark SERIAL PRIMARY KEY,
  id_mark_inspector INTEGER DEFAULT NULL,
  id_mark_system INTEGER DEFAULT NULL,
  mark_client INTEGER DEFAULT NULL
);


ALTER TABLE record ADD FOREIGN KEY (id_information) REFERENCES information (id_information);
ALTER TABLE record ADD FOREIGN KEY (id_mark) REFERENCES mark (id_mark);
ALTER TABLE information ADD FOREIGN KEY (id_date_time) REFERENCES date_time (id_date_time);
ALTER TABLE information ADD FOREIGN KEY (id_operator) REFERENCES operator (id_operator);
ALTER TABLE information ADD FOREIGN KEY (id_client) REFERENCES client (id_client);
ALTER TABLE mark_inspector ADD FOREIGN KEY (id_inspector) REFERENCES inspector (id_inspector);
ALTER TABLE mark ADD FOREIGN KEY (id_mark_inspector) REFERENCES mark_inspector (id_mark_inspector);
ALTER TABLE mark ADD FOREIGN KEY (id_mark_system) REFERENCES mark_system (id_mark_system);
